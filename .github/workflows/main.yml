name: Build & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy-backend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./Backend

    env:
      PORT: ${{ secrets.PORT }}
      MONGO_CONNECTION_URL: ${{ secrets.MONGO_CONNECTION_URL }}
      JWT_KEY: ${{ secrets.JWT_KEY }}
      GOOGLE_MAPS_API: ${{ secrets.GOOGLE_MAPS_API }}
      NODE_ENV: production

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: './Backend/package-lock.json'

      - name: Install Dependencies
        run: npm ci

      - name: Lint Check
        run: npm run lint || true

      - name: Run Tests
        run: npm test || true

      - name: Security Audit
        run: npm audit

      - name: Build
        run: npm run build || true

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
          DEPLOY_URL:https://uber-clone-8.onrender.com
        run: |
          echo "$DEPLOY_KEY" > deploy_key.pem
          chmod 600 deploy_key.pem
          # Add your deployment commands here

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./Frontend

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: './Frontend/package-lock.json'

      - name: Install Dependencies
        run: npm ci || npm install

      - name: Build
        run: npm run build

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Add your frontend deployment commands here"
          # Example for deploying to a cloud service:
          # - Install deployment tools
          # - Configure credentials
          # - Run deployment commands

  security:
    needs: [build-and-deploy-backend, build-and-deploy-frontend]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Run SAST Scan
        uses: github/codeql-action/init@v2
        with:
          languages: javascript
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Run Dependency Check
        run: |
          npm audit

  notify:
    needs: [security]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Notify Status
       

